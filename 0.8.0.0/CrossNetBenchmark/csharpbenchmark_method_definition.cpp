/*
	Header generated by CrossNet
	Method definitions for the assembly csharpbenchmark
*/
#ifndef __CSHARPBENCHMARK_METHOD_DEFINITION_CPP__835346A7__5F531250_H__
#define __CSHARPBENCHMARK_METHOD_DEFINITION_CPP__835346A7__5F531250_H__
#include "csharpbenchmark_class_definition.h"

void ::CSharpBenchmark::_Benchmark::NSieveTest::__Trace__(unsigned char currentMark)
{
}
::System::Int32 CSharpBenchmark::_Benchmark::NSieveTest::nsieve(::System::Int32 m, ::System::Array__G< ::System::Boolean > * isPrime)
{
    ::System::Int32 num;
    for (num = 2 ; (num <= m) ; num++)
    {
        isPrime->Item(num) = true;
    }
    ::System::Int32 num2 = 0;
    for (num = 2 ; (num <= m) ; num++)
    {
        if (isPrime->Item(num))
        {
            for (::System::Int32 i = (num + num) ; (i <= m) ; i = (i + num))
            {
                isPrime->Item(i) = false;
            }
            num2++;
        }
    }
    return (num2);
}
::System::Boolean CSharpBenchmark::_Benchmark::NSieveTest::Test(::System::Int32 N)
{
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        ::System::Array__G< ::System::Boolean > * __temp10717__ = ::System::Array__G< ::System::Boolean >::__Create__(1048577);
        ::System::Array__G< ::System::Boolean > * isPrime = __temp10717__;
        if ((::CSharpBenchmark::_Benchmark::NSieveTest::nsieve(1048576, isPrime) != 82025))
        {
            return (false);
        }
    }
    return (true);
}
void * * CSharpBenchmark::_Benchmark::NSieveTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::NSieveTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::NSieveTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::NSieveTest::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::__Trace__(unsigned char currentMark)
{
    ::CrossNetRuntime::GCManager::Trace(left, currentMark);
    ::CrossNetRuntime::GCManager::Trace(right, currentMark);
}
void CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::__ctor__(::System::Int32 item)
{
::System::Object::__ctor__();
{
    this->item = item;
}
}
::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode * CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::__Create__(::System::Int32 item)
{
    ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode *__temp__ = new ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__( item);
    return (__temp__);
}
::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode * CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::bottomUpTree(::System::Int32 item, ::System::Int32 depth)
{
    if ((depth > 0))
    {
        return ((::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::__Create__(::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::bottomUpTree((((2 * item)) - 1), (depth - 1)), ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::bottomUpTree((2 * item), (depth - 1)), item)));
    }
    return ((::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::__Create__(item)));
}
void CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::__ctor__(::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode * left, ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode * right, ::System::Int32 item)
{
::System::Object::__ctor__();
{
    this->left = left;
    this->right = right;
    this->item = item;
}
}
::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode * CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::__Create__(::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode * left, ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode * right, ::System::Int32 item)
{
    ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode *__temp__ = new ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__( left,  right,  item);
    return (__temp__);
}
::System::Int32 CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::itemCheck()
{
    if ((this->left == NULL))
    {
        return (this->item);
    }
    return ((((this->item + this->left->itemCheck())) - this->right->itemCheck()));
}
::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode * CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::__Create__()
{
    ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode * __temp__ = new ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode;
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode), NULL, 0);
    ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::s__InterfaceMap__ = interfaceMap;
}
::System::Int32 CSharpBenchmark::_Benchmark::BinaryTreesTest::minDepth;
volatile ::System::Int32 CSharpBenchmark::_Benchmark::BinaryTreesTest::sCheck;
void ::CSharpBenchmark::_Benchmark::BinaryTreesTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::BinaryTreesTest::Test(::System::Int32 N)
{
    ::System::Int32 depth = ::System::Math::Max(6, 10);
    ::System::Int32 num2 = (depth + 1);
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        ::CSharpBenchmark::_Benchmark::BinaryTreesTest::sCheck = ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::bottomUpTree(0, num2)->itemCheck();
        ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode * node = ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::bottomUpTree(0, depth);
        for (::System::Int32 j = 4 ; (j <= depth) ; j = (j + 2))
        {
            ::System::Int32 num5 = (((1)) << ((((depth - j)) + 4)));
            ::CSharpBenchmark::_Benchmark::BinaryTreesTest::sCheck = 0;
            for (::System::Int32 k = 1 ; (k <= num5) ; k++)
            {
                ::CSharpBenchmark::_Benchmark::BinaryTreesTest::sCheck = (::CSharpBenchmark::_Benchmark::BinaryTreesTest::sCheck + ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::bottomUpTree(k, j)->itemCheck());
                ::CSharpBenchmark::_Benchmark::BinaryTreesTest::sCheck = (::CSharpBenchmark::_Benchmark::BinaryTreesTest::sCheck + ::CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::bottomUpTree(-k, j)->itemCheck());
            }
        }
        if ((depth == 0))
        {
            return (false);
        }
        ::CSharpBenchmark::_Benchmark::BinaryTreesTest::sCheck = node->itemCheck();
    }
    return (true);
}
void CSharpBenchmark::_Benchmark::BinaryTreesTest::__ctor__()
{
::System::Object::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::BinaryTreesTest * CSharpBenchmark::_Benchmark::BinaryTreesTest::__Create__()
{
    ::CSharpBenchmark::_Benchmark::BinaryTreesTest *__temp__ = new ::CSharpBenchmark::_Benchmark::BinaryTreesTest();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void CSharpBenchmark::_Benchmark::BinaryTreesTest::Static__ctor__()
{
    minDepth = 4;
}
void * * CSharpBenchmark::_Benchmark::BinaryTreesTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::BinaryTreesTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::BinaryTreesTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::BinaryTreesTest::s__InterfaceMap__ = interfaceMap;
}
::System::Int32 CSharpBenchmark::_Benchmark::FannkuchTest::iteration;
void ::CSharpBenchmark::_Benchmark::FannkuchTest::__Trace__(unsigned char currentMark)
{
}
::System::Int32 CSharpBenchmark::_Benchmark::FannkuchTest::fannkuch(::System::Int32 n)
{
    ::System::Int32 num3;
    ::System::Int32 num10;
    ::System::Boolean flag;
    ::System::Array__G< ::System::Int32 > * __temp10718__ = ::System::Array__G< ::System::Int32 >::__Create__(n);
    ::System::Array__G< ::System::Int32 > * numArray = __temp10718__;
    ::System::Array__G< ::System::Int32 > * __temp10719__ = ::System::Array__G< ::System::Int32 >::__Create__(n);
    ::System::Array__G< ::System::Int32 > * numArray2 = __temp10719__;
    ::System::Array__G< ::System::Int32 > * __temp10720__ = ::System::Array__G< ::System::Int32 >::__Create__(n);
    ::System::Array__G< ::System::Int32 > * numArray3 = __temp10720__;
    ::System::Array__G< ::System::Int32 > * __temp10721__ = ::System::Array__G< ::System::Int32 >::__Create__(n);
    ::System::Array__G< ::System::Int32 > * numArray4 = __temp10721__;
    ::System::Int32 num = 0;
    ::System::Int32 index = (n - 1);
    for (num3 = 0 ; (num3 < n) ; num3++)
    {
        numArray2->Item(num3) = num3;
    }
    ::System::Int32 num4 = n;
    Label_01A0:
    flag = true;
    while ((num4 != 1))
    {
        numArray3->Item((num4 - 1)) = num4;
        num4--;
    }
    if ((((numArray2->Item(0) != 0)) && ((numArray2->Item(index) != index))))
    {
        ::System::Int32 num6;
        for (num3 = 0 ; (num3 < n) ; num3++)
        {
            numArray->Item(num3) = numArray2->Item(num3);
        }
        ::System::Int32 num5 = 0;
        while (((num6 = numArray->Item(0)) != 0))
        {
            ::System::Int32 num7 = (((num6 + 1)) >> 1);
            for (num3 = 0 ; (num3 < num7) ; num3++)
            {
                ::System::Int32 num8 = numArray->Item(num3);
                numArray->Item(num3) = numArray->Item((num6 - num3));
                numArray->Item((num6 - num3)) = num8;
            }
            num5++;
        }
        if ((num5 > num))
        {
            num = num5;
            for (num3 = 0 ; (num3 < n) ; num3++)
            {
                numArray4->Item(num3) = numArray2->Item(num3);
            }
        }
    }
    Label_019A:
    flag = true;
    if ((num4 == n))
    {
        return (num);
    }
    ::System::Int32 num9 = numArray2->Item(0);
    for (num3 = 0 ; (num3 < num4) ; num3 = num10)
    {
        num10 = (num3 + 1);
        numArray2->Item(num3) = numArray2->Item(num10);
    }
    numArray2->Item(num4) = num9;
    numArray3->Item(num4)--;
    if ((numArray3->Item(num4) <= 0))
    {
        num4++;
        goto Label_019A;
    }
    goto Label_01A0;
}
::System::Boolean CSharpBenchmark::_Benchmark::FannkuchTest::Test(::System::Int32 N)
{
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        if ((::CSharpBenchmark::_Benchmark::FannkuchTest::fannkuch(::CSharpBenchmark::_Benchmark::FannkuchTest::iteration) != 16))
        {
            return (false);
        }
    }
    return (true);
}
void CSharpBenchmark::_Benchmark::FannkuchTest::Static__ctor__()
{
    ::CSharpBenchmark::_Benchmark::FannkuchTest::iteration = 7;
}
void * * CSharpBenchmark::_Benchmark::FannkuchTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::FannkuchTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::FannkuchTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::FannkuchTest::s__InterfaceMap__ = interfaceMap;
}
::System::Int32 CSharpBenchmark::_Benchmark::UnsafeTest::SIZE;
void ::CSharpBenchmark::_Benchmark::UnsafeTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::UnsafeTest::Test(::System::Int32 N)
{
    ::System::Array__G< ::System::Int32 > * __temp10722__ = ::System::Array__G< ::System::Int32 >::__Create__(10000);
    ::System::Array__G< ::System::Int32 > * numArray = __temp10722__;
    for (::System::Int32 i = 0 ; (i < 10000) ; i++)
    {
        numArray->Item(i) = i;
    }
    for (::System::Int32 j = 0 ; (j < N) ; j++)
    {
        ::System::Int32 num3 = 0;
        {
            ::System::Int32 * numRef = numArray->__ToPointer__();
            ::CrossNetRuntime::SetFixed(numRef, true);
            {
                ::System::Int32 * numPtr = numRef;
                ::System::Int32 length = numArray->get_Length();
                while (((length--) != 0))
                {
                    num3 = (num3 + numPtr[0]);
                    numPtr++;
                }
            }
            ::CrossNetRuntime::SetFixed(numRef, false);
        }
        if ((num3 != 49995000))
        {
            return (false);
        }
    }
    return (true);
}
void CSharpBenchmark::_Benchmark::UnsafeTest::Static__ctor__()
{
    SIZE = 10000;
}
void * * CSharpBenchmark::_Benchmark::UnsafeTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::UnsafeTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::UnsafeTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::UnsafeTest::s__InterfaceMap__ = interfaceMap;
}
::System::Int32 CSharpBenchmark::_Benchmark::StringConcatenationTest::SIZE;
void ::CSharpBenchmark::_Benchmark::StringConcatenationTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::StringConcatenationTest::Test(::System::Int32 N)
{
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        ::System::String * str = CrossNetRuntime::GenWrapperConvert(i).ToString();
        for (::System::Int32 j = 0 ; (j < 10000) ; j++)
        {
            str = ::System::String::Concat(str, scsharpbenchmark___);
        }
        if ((str->get_Length() != ((10000 + CrossNetRuntime::GenWrapperConvert(i).ToString()->get_Length()))))
        {
            return (false);
        }
    }
    return (true);
}
void CSharpBenchmark::_Benchmark::StringConcatenationTest::Static__ctor__()
{
    SIZE = 10000;
}
void * * CSharpBenchmark::_Benchmark::StringConcatenationTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::StringConcatenationTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::StringConcatenationTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::StringConcatenationTest::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__I1::__Trace__(unsigned char currentMark)
{
}
void * * CSharpBenchmark::_Benchmark::CastTest__I1::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__I1::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterInterface();
    ::CSharpBenchmark::_Benchmark::CastTest__I1::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::CastTest::Test(::System::Int32 N)
{
    ::System::Object * obj2 = ::CrossNetRuntime::Cast<::System::Object >((::CSharpBenchmark::_Benchmark::CastTest__C8::__Create__()));
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        for (::System::Int32 j = 0 ; (j < 1000000) ; j++)
        {
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__I1 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__I2 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__I3 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__I4 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__I5 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__I6 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__I7 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__I8 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__C1 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__C2 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__C3 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__C4 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__C5 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__C6 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__C7 >(obj2)))
            {
                return (false);
            }
            if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::CastTest__C8 >(obj2)))
            {
                return (false);
            }
        }
    }
    return (true);
}
void CSharpBenchmark::_Benchmark::CastTest::__ctor__()
{
::System::Object::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::CastTest * CSharpBenchmark::_Benchmark::CastTest::__Create__()
{
    ::CSharpBenchmark::_Benchmark::CastTest *__temp__ = new ::CSharpBenchmark::_Benchmark::CastTest();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::CastTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::CastTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::CastTest::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface::__Trace__(unsigned char currentMark)
{
}
void * * CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterInterface();
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::InterfaceTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::InterfaceTest::Test(::System::Int32 N)
{
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface2 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface3 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface4 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface5 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface6 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface7 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface8 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface9 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface10 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface11 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface12 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface13 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface14 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface15 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface16 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * interface17 = ::CrossNetRuntime::InterfaceCast<::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface >((::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()));
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        for (::System::Int32 j = 0 ; (j < 1000000) ; j++)
        {
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10723__ = interface2;
            if ((INTERFACE__CALL(__temp10723__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10723__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10724__ = interface3;
            if ((INTERFACE__CALL(__temp10724__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10724__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10725__ = interface4;
            if ((INTERFACE__CALL(__temp10725__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10725__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10726__ = interface5;
            if ((INTERFACE__CALL(__temp10726__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10726__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10727__ = interface6;
            if ((INTERFACE__CALL(__temp10727__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10727__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10728__ = interface7;
            if ((INTERFACE__CALL(__temp10728__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10728__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10729__ = interface8;
            if ((INTERFACE__CALL(__temp10729__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10729__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10730__ = interface9;
            if ((INTERFACE__CALL(__temp10730__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10730__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10731__ = interface10;
            if ((INTERFACE__CALL(__temp10731__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10731__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10732__ = interface11;
            if ((INTERFACE__CALL(__temp10732__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10732__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10733__ = interface12;
            if ((INTERFACE__CALL(__temp10733__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10733__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10734__ = interface13;
            if ((INTERFACE__CALL(__temp10734__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10734__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10735__ = interface14;
            if ((INTERFACE__CALL(__temp10735__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10735__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10736__ = interface15;
            if ((INTERFACE__CALL(__temp10736__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10736__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10737__ = interface16;
            if ((INTERFACE__CALL(__temp10737__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10737__, 42) != 42))
            {
                return (false);
            }
            ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface * __temp10738__ = interface17;
            if ((INTERFACE__CALL(__temp10738__, ::CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface)->Function(__temp10738__, 42) != 42))
            {
                return (false);
            }
        }
    }
    return (true);
}
void * * CSharpBenchmark::_Benchmark::InterfaceTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::InterfaceTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::InterfaceTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::InterfaceTest::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::HashtableTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::HashtableTest::Test(::System::Int32 N)
{
    ::System::Int32 num;
    ::System::Collections::Hashtable * hashtable = (::System::Collections::Hashtable::__Create__());
    ::System::Collections::Hashtable * hashtable2 = (::System::Collections::Hashtable::__Create__());
    for (num = 0 ; (num <= 9999) ; num++)
    {
        hashtable->Add(::CrossNetRuntime::Cast<::System::Object >(::System::String::Concat(scsharpbenchmark__foo_, CrossNetRuntime::GenWrapperConvert(num).ToString())), ::CrossNetRuntime::Box<::System::Object >(num));
    }
    for (num = 0 ; (num < N) ; num++)
    {
        ::System::Collections::IDictionaryEnumerator * enumerator = hashtable->GetEnumerator();
        ::System::Collections::IEnumerator * __temp10739__ = ::CrossNetRuntime::InterfaceCast<::System::Collections::IEnumerator >(enumerator);
        while (INTERFACE__CALL(__temp10739__, ::System::Collections::IEnumerator)->MoveNext(__temp10739__))
        {
            ::System::Collections::IDictionaryEnumerator * __temp10740__ = enumerator;
            if (hashtable2->ContainsKey(INTERFACE__CALL(__temp10740__, ::System::Collections::IDictionaryEnumerator)->get_Key(__temp10740__)))
            {
                ::System::Collections::IDictionaryEnumerator * __temp10741__ = enumerator;
                ::System::Int32 num2 = (::CrossNetRuntime::Unbox<::CrossNetRuntime::BaseTypeWrapper<::System::Int32 >::BoxeableType  >(hashtable->get_Item(INTERFACE__CALL(__temp10741__, ::System::Collections::IDictionaryEnumerator)->get_Key(__temp10741__))));
                ::System::Collections::IDictionaryEnumerator * __temp10742__ = enumerator;
                ::System::Int32 num3 = (::CrossNetRuntime::Unbox<::CrossNetRuntime::BaseTypeWrapper<::System::Int32 >::BoxeableType  >(hashtable2->get_Item(INTERFACE__CALL(__temp10742__, ::System::Collections::IDictionaryEnumerator)->get_Key(__temp10742__))));
                ::System::Collections::IDictionaryEnumerator * __temp10743__ = enumerator;
                hashtable2->set_Item(INTERFACE__CALL(__temp10743__, ::System::Collections::IDictionaryEnumerator)->get_Key(__temp10743__), ::CrossNetRuntime::Box<::System::Object >((num2 + num3)));
            }
            else
            {
                ::System::Collections::IDictionaryEnumerator * __temp10744__ = enumerator;
                ::System::Collections::IDictionaryEnumerator * __temp10745__ = enumerator;
                hashtable2->Add(INTERFACE__CALL(__temp10744__, ::System::Collections::IDictionaryEnumerator)->get_Key(__temp10744__), hashtable->get_Item(INTERFACE__CALL(__temp10745__, ::System::Collections::IDictionaryEnumerator)->get_Key(__temp10745__)));
            }
        }
        if (::System::String::op_Inequality(hashtable->get_Item(::CrossNetRuntime::Cast<::System::Object >(scsharpbenchmark__foo_0))->ToString(), scsharpbenchmark__0))
        {
            return (false);
        }
        if (::System::String::op_Inequality(hashtable->get_Item(::CrossNetRuntime::Cast<::System::Object >(scsharpbenchmark__foo_3705))->ToString(), scsharpbenchmark__3705))
        {
            return (false);
        }
        if (::System::String::op_Inequality(hashtable->get_Item(::CrossNetRuntime::Cast<::System::Object >(scsharpbenchmark__foo_9999))->ToString(), scsharpbenchmark__9999))
        {
            return (false);
        }
        if (::System::String::op_Inequality(hashtable2->get_Item(::CrossNetRuntime::Cast<::System::Object >(scsharpbenchmark__foo_0))->ToString(), scsharpbenchmark__0))
        {
            return (false);
        }
        ::System::Int32 num4 = (3705 * ((num + 1)));
        if (::System::String::op_Inequality(hashtable2->get_Item(::CrossNetRuntime::Cast<::System::Object >(scsharpbenchmark__foo_3705))->ToString(), CrossNetRuntime::GenWrapperConvert(num4).ToString()))
        {
            return (false);
        }
        num4 = (9999 * ((num + 1)));
        if (::System::String::op_Inequality(hashtable2->get_Item(::CrossNetRuntime::Cast<::System::Object >(scsharpbenchmark__foo_9999))->ToString(), CrossNetRuntime::GenWrapperConvert(num4).ToString()))
        {
            return (false);
        }
    }
    return (true);
}
void * * CSharpBenchmark::_Benchmark::HashtableTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::HashtableTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::HashtableTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::HashtableTest::s__InterfaceMap__ = interfaceMap;
}
::System::Int32 CSharpBenchmark::_Benchmark::NestedLoopsTest::n;
void ::CSharpBenchmark::_Benchmark::NestedLoopsTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::NestedLoopsTest::Test(::System::Int32 N)
{
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        ::System::Int32 num2 = 0;
        ::System::Int32 n = ::CSharpBenchmark::_Benchmark::NestedLoopsTest::n;
        while (((n--) != 0))
        {
            ::System::Int32 num4 = ::CSharpBenchmark::_Benchmark::NestedLoopsTest::n;
            while (((num4--) != 0))
            {
                ::System::Int32 num5 = ::CSharpBenchmark::_Benchmark::NestedLoopsTest::n;
                while (((num5--) != 0))
                {
                    ::System::Int32 num6 = ::CSharpBenchmark::_Benchmark::NestedLoopsTest::n;
                    while (((num6--) != 0))
                    {
                        ::System::Int32 num7 = ::CSharpBenchmark::_Benchmark::NestedLoopsTest::n;
                        while (((num7--) != 0))
                        {
                            ::System::Int32 num8 = ::CSharpBenchmark::_Benchmark::NestedLoopsTest::n;
                            while (((num8--) != 0))
                            {
                                num2++;
                            }
                        }
                    }
                }
            }
        }
        if ((num2 != 16777216))
        {
            return (false);
        }
    }
    return (true);
}
void CSharpBenchmark::_Benchmark::NestedLoopsTest::Static__ctor__()
{
    ::CSharpBenchmark::_Benchmark::NestedLoopsTest::n = 16;
}
void * * CSharpBenchmark::_Benchmark::NestedLoopsTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::NestedLoopsTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::NestedLoopsTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::NestedLoopsTest::s__InterfaceMap__ = interfaceMap;
}
::System::Int32 CSharpBenchmark::_Benchmark::ForeachOnArrayTest::SIZE;
void ::CSharpBenchmark::_Benchmark::ForeachOnArrayTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::ForeachOnArrayTest::Test(::System::Int32 N)
{
    ::System::Array__G< ::System::Int32 > * __temp10746__ = ::System::Array__G< ::System::Int32 >::__Create__(10000);
    ::System::Array__G< ::System::Int32 > * numArray = __temp10746__;
    for (::System::Int32 i = 0 ; (i < 10000) ; i++)
    {
        numArray->Item(i) = i;
    }
    for (::System::Int32 j = 0 ; (j < N) ; j++)
    {
        ::System::Int32 num3 = 0;
        {
            ::System::Array__G< ::System::Int32 > * __temp10747__ = numArray;
            ::System::Int32 __temp10748__ = __temp10747__->get_Length();
            for (::System::Int32 __temp10749__ = 0 ; __temp10749__ < __temp10748__ ; ++__temp10749__)
            {
                ::System::Int32 num4 = __temp10747__->Item(__temp10749__);
                {
                    num3 = (num3 + num4);
                }
            }
        }
        if ((num3 != 49995000))
        {
            return (false);
        }
    }
    return (true);
}
void CSharpBenchmark::_Benchmark::ForeachOnArrayTest::Static__ctor__()
{
    SIZE = 10000;
}
void * * CSharpBenchmark::_Benchmark::ForeachOnArrayTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::ForeachOnArrayTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::ForeachOnArrayTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::ForeachOnArrayTest::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::Benchmark::__Trace__(unsigned char currentMark)
{
}
::System::Void CSharpBenchmark::_Benchmark::Benchmark::Test()
{
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Binary_Tre, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::BinaryTreesTest >(&::CSharpBenchmark::_Benchmark::BinaryTreesTest::Test)), 1000);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Cast, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::CastTest >(&::CSharpBenchmark::_Benchmark::CastTest::Test)), 66);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Dictionary, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::DictionaryTest >(&::CSharpBenchmark::_Benchmark::DictionaryTest::Test)), 150);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Event, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::EventsTest >(&::CSharpBenchmark::_Benchmark::EventsTest::Test)), 1700);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Fannkuch, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::FannkuchTest >(&::CSharpBenchmark::_Benchmark::FannkuchTest::Test)), 16000);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Foreach_on, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::ForeachOnArrayTest >(&::CSharpBenchmark::_Benchmark::ForeachOnArrayTest::Test)), 1250000);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__GC, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::GcTest >(&::CSharpBenchmark::_Benchmark::GcTest::Test)), 400);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Hashtable_, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::HashtableTest >(&::CSharpBenchmark::_Benchmark::HashtableTest::Test)), 1200);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Heapsort, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::HeapSortTest >(&::CSharpBenchmark::_Benchmark::HeapSortTest::Test)), 250);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Interface_, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::InterfaceTest >(&::CSharpBenchmark::_Benchmark::InterfaceTest::Test)), 100);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__List, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::ListTest >(&::CSharpBenchmark::_Benchmark::ListTest::Test)), 18000);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Matrix_mul, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::MatrixTest >(&::CSharpBenchmark::_Benchmark::MatrixTest::Test)), 50000);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Nested_loo, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::NestedLoopsTest >(&::CSharpBenchmark::_Benchmark::NestedLoopsTest::Test)), 500);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Sieves, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::NSieveTest >(&::CSharpBenchmark::_Benchmark::NSieveTest::Test)), 700);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Partial_su, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::PartialSumsTest >(&::CSharpBenchmark::_Benchmark::PartialSumsTest::Test)), 16000);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Recursive_, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::RecursiveTest >(&::CSharpBenchmark::_Benchmark::RecursiveTest::Test)), 1);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__String_con, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::StringConcatenationTest >(&::CSharpBenchmark::_Benchmark::StringConcatenationTest::Test)), 160);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Unsafe_cod, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::UnsafeTest >(&::CSharpBenchmark::_Benchmark::UnsafeTest::Test)), 750000);
    ::CSharpBenchmark::_Benchmark::Benchmark::DoTest(scsharpbenchmark__Virtual_ca, ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate >(new ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::VirtualTest >(&::CSharpBenchmark::_Benchmark::VirtualTest::Test)), 100);
    ::System::Console::WriteLine(scsharpbenchmark__Press_a_ke);
    ::System::Console::ReadKey(true);
}
::System::Void CSharpBenchmark::_Benchmark::Benchmark::DoTest(::System::String * text, ::CSharpBenchmark::_Benchmark::Benchmark__TestDelegate * del, ::System::Int32 n)
{
    ::System::Console::WriteLine(::System::String::Concat(scsharpbenchmark__Test_, text, scsharpbenchmark_____0));
    ::System::Console::WriteLine(scsharpbenchmark___Initializ);
    ::System::GC::Collect();
    if (!(del)->Invoke(1))
    {
        ::System::Console::WriteLine(scsharpbenchmark___Initializ__0);
        ::System::Console::WriteLine();
    }
    else
    {
        ::System::GC::Collect();
        ::System::Console::WriteLine(scsharpbenchmark___Running__);
        ::System::DateTime now = ::System::DateTime::get_Now();
        if (!(del)->Invoke(n))
        {
            ::System::Console::WriteLine(scsharpbenchmark___Test_fail);
            ::System::Console::WriteLine();
        }
        else
        {
            ::System::TimeSpan span = ::System::DateTime::get_Now().Subtract(now);
            ::System::Console::WriteLine(::System::String::Concat(scsharpbenchmark___Finished_, CrossNetRuntime::GenWrapperConvert(span.get_TotalSeconds()).ToString(), scsharpbenchmark___seconds__));
            ::System::Console::WriteLine();
        }
    }
}
void * * CSharpBenchmark::_Benchmark::Benchmark::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::Benchmark::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::Benchmark), NULL, 0);
    ::CSharpBenchmark::_Benchmark::Benchmark::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::GcTest__Toggle::__Trace__(unsigned char currentMark)
{
}
void CSharpBenchmark::_Benchmark::GcTest__Toggle::__ctor__(::System::Boolean start_state)
{
::System::Object::__ctor__();
{
    this->state = true;
    this->state = start_state;
}
}
::CSharpBenchmark::_Benchmark::GcTest__Toggle * CSharpBenchmark::_Benchmark::GcTest__Toggle::__Create__(::System::Boolean start_state)
{
    ::CSharpBenchmark::_Benchmark::GcTest__Toggle *__temp__ = new ::CSharpBenchmark::_Benchmark::GcTest__Toggle();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__( start_state);
    return (__temp__);
}
::System::Boolean CSharpBenchmark::_Benchmark::GcTest__Toggle::value()
{
    return (this->state);
}
::CSharpBenchmark::_Benchmark::GcTest__Toggle * CSharpBenchmark::_Benchmark::GcTest__Toggle::activate()
{
    this->state = !this->state;
    return (this);
}
::CSharpBenchmark::_Benchmark::GcTest__Toggle * CSharpBenchmark::_Benchmark::GcTest__Toggle::__Create__()
{
    ::CSharpBenchmark::_Benchmark::GcTest__Toggle * __temp__ = new ::CSharpBenchmark::_Benchmark::GcTest__Toggle;
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::GcTest__Toggle::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::GcTest__Toggle::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::GcTest__Toggle), NULL, 0);
    ::CSharpBenchmark::_Benchmark::GcTest__Toggle::s__InterfaceMap__ = interfaceMap;
}
::System::Int32 CSharpBenchmark::_Benchmark::GcTest::NUM_TOGGLE;
volatile ::System::Boolean CSharpBenchmark::_Benchmark::GcTest::sVolatileValue;
void ::CSharpBenchmark::_Benchmark::GcTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::GcTest::Test(::System::Int32 N)
{
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        ::System::Int32 num2;
        ::CSharpBenchmark::_Benchmark::GcTest__Toggle * toggle = (::CSharpBenchmark::_Benchmark::GcTest__Toggle::__Create__(true));
        for (num2 = 0 ; (num2 < 5) ; num2++)
        {
            ::CSharpBenchmark::_Benchmark::GcTest::sVolatileValue = toggle->activate()->value();
        }
        for (num2 = 0 ; (num2 < ::CSharpBenchmark::_Benchmark::GcTest::NUM_TOGGLE) ; num2++)
        {
            ::CSharpBenchmark::_Benchmark::GcTest__Toggle * toggle2 = (::CSharpBenchmark::_Benchmark::GcTest__Toggle::__Create__(true));
        }
        ::CSharpBenchmark::_Benchmark::GcTest__NthToggle * toggle3 = (::CSharpBenchmark::_Benchmark::GcTest__NthToggle::__Create__(true, 3));
        for (num2 = 0 ; (num2 < 8) ; num2++)
        {
            ::CSharpBenchmark::_Benchmark::GcTest::sVolatileValue = (::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::GcTest__Toggle >(toggle3->activate()))->value();
        }
        for (num2 = 0 ; (num2 < ::CSharpBenchmark::_Benchmark::GcTest::NUM_TOGGLE) ; num2++)
        {
            ::CSharpBenchmark::_Benchmark::GcTest__NthToggle * toggle4 = (::CSharpBenchmark::_Benchmark::GcTest__NthToggle::__Create__(true, 3));
        }
        for (num2 = 0 ; (num2 < 5) ; num2++)
        {
            ::CSharpBenchmark::_Benchmark::GcTest::sVolatileValue = toggle->activate()->value();
        }
        for (num2 = 0 ; (num2 < 8) ; num2++)
        {
            ::CSharpBenchmark::_Benchmark::GcTest::sVolatileValue = (::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::GcTest__Toggle >(toggle3->activate()))->value();
        }
    }
    return (true);
}
void CSharpBenchmark::_Benchmark::GcTest::Static__ctor__()
{
    ::CSharpBenchmark::_Benchmark::GcTest::NUM_TOGGLE = 1000000;
}
void * * CSharpBenchmark::_Benchmark::GcTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::GcTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::GcTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::GcTest::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::DictionaryTest__Def::__Trace__(unsigned char currentMark)
{
}
void CSharpBenchmark::_Benchmark::DictionaryTest__Def::__ctor__(::System::Int32 a)
{
    (*this).mA = a;
}
::CSharpBenchmark::_Benchmark::DictionaryTest__Def::DictionaryTest__Def(::System::Int32 a)
{
    __ctor__( a);
}
::System::Boolean CSharpBenchmark::_Benchmark::DictionaryTest__Def::op_Equality(::CSharpBenchmark::_Benchmark::DictionaryTest__Def left, ::CSharpBenchmark::_Benchmark::DictionaryTest__Def right)
{
    return ((left.mA == right.mA));
}
::System::Boolean CSharpBenchmark::_Benchmark::DictionaryTest__Def::op_Inequality(::CSharpBenchmark::_Benchmark::DictionaryTest__Def left, ::CSharpBenchmark::_Benchmark::DictionaryTest__Def right)
{
    return ((left.mA != right.mA));
}
::System::Boolean CSharpBenchmark::_Benchmark::DictionaryTest__Def::Equals(::System::Object * obj)
{
    if (!(::CrossNetRuntime::IsCast<::CSharpBenchmark::_Benchmark::DictionaryTest__Def >(obj)))
    {
        return (false);
    }
    ::CSharpBenchmark::_Benchmark::DictionaryTest__Def def = (::CrossNetRuntime::Unbox<::CSharpBenchmark::_Benchmark::DictionaryTest__Def >(obj));
    return (((*this).mA == def.mA));
}
::System::Int32 CSharpBenchmark::_Benchmark::DictionaryTest__Def::GetHashCode()
{
    return ((*this).mA);
}
CSharpBenchmark::_Benchmark::DictionaryTest__Def::DictionaryTest__Def()
{
    __ctor__();
}
void CSharpBenchmark::_Benchmark::DictionaryTest__Def::__ctor__()
{
    __memclear__(this, sizeof(*this));
}
::System::String * CSharpBenchmark::_Benchmark::DictionaryTest__Def::ToString()
{
    return (::System::String::__Create__(L"::CSharpBenchmark::_Benchmark::DictionaryTest__Def"));
}
void * * CSharpBenchmark::_Benchmark::DictionaryTest__Def::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::DictionaryTest__Def::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CrossNetRuntime::BoxedObject<::CSharpBenchmark::_Benchmark::DictionaryTest__Def >), NULL, 0);
    ::CSharpBenchmark::_Benchmark::DictionaryTest__Def::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::DictionaryTest__Abc::__Trace__(unsigned char currentMark)
{
}
void CSharpBenchmark::_Benchmark::DictionaryTest__Abc::__ctor__(::System::Int32 b)
{
    (*this).mB = b;
}
::CSharpBenchmark::_Benchmark::DictionaryTest__Abc::DictionaryTest__Abc(::System::Int32 b)
{
    __ctor__( b);
}
CSharpBenchmark::_Benchmark::DictionaryTest__Abc::DictionaryTest__Abc()
{
    __ctor__();
}
void CSharpBenchmark::_Benchmark::DictionaryTest__Abc::__ctor__()
{
    __memclear__(this, sizeof(*this));
}
::System::String * CSharpBenchmark::_Benchmark::DictionaryTest__Abc::ToString()
{
    return (::System::String::__Create__(L"::CSharpBenchmark::_Benchmark::DictionaryTest__Abc"));
}
::System::Boolean CSharpBenchmark::_Benchmark::DictionaryTest__Abc::Equals(::System::Object * obj)
{
    return (::CrossNetRuntime::StructEquals(this, obj));
}
::System::Int32 CSharpBenchmark::_Benchmark::DictionaryTest__Abc::GetHashCode()
{
    return (::CrossNetRuntime::StructGetHashCode(this));
}
void * * CSharpBenchmark::_Benchmark::DictionaryTest__Abc::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::DictionaryTest__Abc::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CrossNetRuntime::BoxedObject<::CSharpBenchmark::_Benchmark::DictionaryTest__Abc >), NULL, 0);
    ::CSharpBenchmark::_Benchmark::DictionaryTest__Abc::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::DictionaryTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::DictionaryTest::Test(::System::Int32 N)
{
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        ::System::Int32 num2;
        ::System::Collections::Generic::Dictionary__G2<__W2__(::System::Int32, ::System::Double) > * dictionary = (::System::Collections::Generic::Dictionary__G2<__W2__(::System::Int32, ::System::Double) >::__Create__(10240));
        for (num2 = 0 ; (num2 < 10240) ; num2++)
        {
            dictionary->Add(num2, (::CrossNetRuntime::UnsafeCast<::System::Double >(num2)));
        }
        for (num2 = 0 ; (num2 < 100) ; num2++)
        {
            for (::System::Int32 j = 0 ; (j < 10240) ; j++)
            {
                ::System::Double num4 = dictionary->get_Item(j);
                if ((num4 != j))
                {
                    return (false);
                }
            }
        }
    }
    return (true);
}
::System::Boolean CSharpBenchmark::_Benchmark::DictionaryTest::CompileCheck1()
{
    ::System::Collections::Generic::Dictionary__G2<__W2__(::System::String *, ::System::String *) > * dictionary = (::System::Collections::Generic::Dictionary__G2<__W2__(::System::String *, ::System::String *) >::__Create__());
    dictionary->Add(scsharpbenchmark__Abc, scsharpbenchmark__Def);
    ::System::String * str = dictionary->get_Item(scsharpbenchmark__Abc);
    return (::System::String::op_Equality(str, scsharpbenchmark__Def));
}
::System::Boolean CSharpBenchmark::_Benchmark::DictionaryTest::CompileCheck2()
{
    ::System::Collections::Generic::Dictionary__G2<__W2__(::CSharpBenchmark::_Benchmark::DictionaryTest__Abc, ::CSharpBenchmark::_Benchmark::DictionaryTest__Def) > * dictionary = (::System::Collections::Generic::Dictionary__G2<__W2__(::CSharpBenchmark::_Benchmark::DictionaryTest__Abc, ::CSharpBenchmark::_Benchmark::DictionaryTest__Def) >::__Create__());
    dictionary->Add((::CSharpBenchmark::_Benchmark::DictionaryTest__Abc(10)), (::CSharpBenchmark::_Benchmark::DictionaryTest__Def(20)));
    ::CSharpBenchmark::_Benchmark::DictionaryTest__Def def = dictionary->get_Item((::CSharpBenchmark::_Benchmark::DictionaryTest__Abc(10)));
    return (::CSharpBenchmark::_Benchmark::DictionaryTest__Def::op_Equality(def, (::CSharpBenchmark::_Benchmark::DictionaryTest__Def(20))));
}
void CSharpBenchmark::_Benchmark::DictionaryTest::__ctor__()
{
::System::Object::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::DictionaryTest * CSharpBenchmark::_Benchmark::DictionaryTest::__Create__()
{
    ::CSharpBenchmark::_Benchmark::DictionaryTest *__temp__ = new ::CSharpBenchmark::_Benchmark::DictionaryTest();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::DictionaryTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::DictionaryTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::DictionaryTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::DictionaryTest::s__InterfaceMap__ = interfaceMap;
}
::System::Int32 CSharpBenchmark::_Benchmark::MatrixTest::SIZE;
void ::CSharpBenchmark::_Benchmark::MatrixTest::__Trace__(unsigned char currentMark)
{
}
::System::Array__G< ::System::Int32 > * CSharpBenchmark::_Benchmark::MatrixTest::mkmatrix(::System::Int32 rows, ::System::Int32 cols)
{
    ::System::Int32 num = 1;
    ::System::Array__G< ::System::Int32 > * __temp10750__ = ::System::Array__G< ::System::Int32 >::__Create__(rows, cols);
    ::System::Array__G< ::System::Int32 > * numArray = __temp10750__;
    for (::System::Int32 i = 0 ; (i < rows) ; i++)
    {
        for (::System::Int32 j = 0 ; (j < cols) ; j++)
        {
            numArray->Item(i, j) = num;
            num++;
        }
    }
    return (numArray);
}
::System::Void CSharpBenchmark::_Benchmark::MatrixTest::mmult(::System::Int32 rows, ::System::Int32 cols, ::System::Array__G< ::System::Int32 > * m1, ::System::Array__G< ::System::Int32 > * m2, ::System::Array__G< ::System::Int32 > * m3)
{
    for (::System::Int32 i = 0 ; (i < rows) ; i++)
    {
        for (::System::Int32 j = 0 ; (j < cols) ; j++)
        {
            ::System::Int32 num3 = 0;
            for (::System::Int32 k = 0 ; (k < cols) ; k++)
            {
                num3 = (num3 + ((m1->Item(i, k) * m2->Item(k, j))));
            }
            m3->Item(i, j) = num3;
        }
    }
}
::System::Boolean CSharpBenchmark::_Benchmark::MatrixTest::Test(::System::Int32 N)
{
    ::System::Array__G< ::System::Int32 > * numArray = ::CSharpBenchmark::_Benchmark::MatrixTest::mkmatrix(::CSharpBenchmark::_Benchmark::MatrixTest::SIZE, ::CSharpBenchmark::_Benchmark::MatrixTest::SIZE);
    ::System::Array__G< ::System::Int32 > * numArray2 = ::CSharpBenchmark::_Benchmark::MatrixTest::mkmatrix(::CSharpBenchmark::_Benchmark::MatrixTest::SIZE, ::CSharpBenchmark::_Benchmark::MatrixTest::SIZE);
    ::System::Array__G< ::System::Int32 > * __temp10751__ = ::System::Array__G< ::System::Int32 >::__Create__(::CSharpBenchmark::_Benchmark::MatrixTest::SIZE, ::CSharpBenchmark::_Benchmark::MatrixTest::SIZE);
    ::System::Array__G< ::System::Int32 > * numArray3 = __temp10751__;
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        ::CSharpBenchmark::_Benchmark::MatrixTest::mmult(::CSharpBenchmark::_Benchmark::MatrixTest::SIZE, ::CSharpBenchmark::_Benchmark::MatrixTest::SIZE, numArray, numArray2, numArray3);
        if ((numArray3->Item(0, 0) != 270165))
        {
            return (false);
        }
        if ((numArray3->Item(2, 7) != 1070820))
        {
            return (false);
        }
        if ((numArray3->Item(17, 5) != 7019790))
        {
            return (false);
        }
        if ((numArray3->Item(25, 12) != 10355745))
        {
            return (false);
        }
    }
    return (true);
}
void CSharpBenchmark::_Benchmark::MatrixTest::Static__ctor__()
{
    ::CSharpBenchmark::_Benchmark::MatrixTest::SIZE = 30;
}
void * * CSharpBenchmark::_Benchmark::MatrixTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::MatrixTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::MatrixTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::MatrixTest::s__InterfaceMap__ = interfaceMap;
}
::System::Double CSharpBenchmark::_Benchmark::PartialSumsTest::twothirds;
::System::Double CSharpBenchmark::_Benchmark::PartialSumsTest::s1;
::System::Double CSharpBenchmark::_Benchmark::PartialSumsTest::s2;
::System::Double CSharpBenchmark::_Benchmark::PartialSumsTest::s3;
::System::Double CSharpBenchmark::_Benchmark::PartialSumsTest::s4;
::System::Double CSharpBenchmark::_Benchmark::PartialSumsTest::s5;
::System::Double CSharpBenchmark::_Benchmark::PartialSumsTest::s6;
::System::Double CSharpBenchmark::_Benchmark::PartialSumsTest::s7;
::System::Double CSharpBenchmark::_Benchmark::PartialSumsTest::s8;
::System::Double CSharpBenchmark::_Benchmark::PartialSumsTest::s9;
void ::CSharpBenchmark::_Benchmark::PartialSumsTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::PartialSumsTest::Test(::System::Int32 N)
{
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        ::System::Double num2 = 0.;
        ::System::Double num3 = 0.;
        ::System::Double num4 = 0.;
        ::System::Double num5 = 0.;
        ::System::Double num6 = 0.;
        ::System::Double num7 = 0.;
        ::System::Double num8 = 0.;
        ::System::Double num9 = 0.;
        ::System::Double num10 = 0.;
        ::System::Double num11 = -1.;
        for (::System::Int32 j = 1 ; (j <= 1000) ; j++)
        {
            ::System::Double num13 = ::System::Math::Pow((::CrossNetRuntime::UnsafeCast<::System::Double >(j)), 2.);
            ::System::Double num14 = (num13 * j);
            ::System::Double num15 = ::System::Math::Sin((::CrossNetRuntime::UnsafeCast<::System::Double >(j)));
            ::System::Double num16 = ::System::Math::Cos((::CrossNetRuntime::UnsafeCast<::System::Double >(j)));
            num11 = -num11;
            num2 = (num2 + ::System::Math::Pow(0.66666666666666663, (::CrossNetRuntime::UnsafeCast<::System::Double >((j - 1)))));
            num3 = (num3 + ::System::Math::Pow((::CrossNetRuntime::UnsafeCast<::System::Double >(j)), -0.5));
            num4 = (num4 + ((1. / ((j * ((j + 1.)))))));
            num5 = (num5 + ((1. / ((((num14 * num15)) * num15)))));
            num6 = (num6 + ((1. / ((((num14 * num16)) * num16)))));
            num7 = (num7 + ((1. / (::CrossNetRuntime::UnsafeCast<::System::Double >(j)))));
            num8 = (num8 + ((1. / num13)));
            num9 = (num9 + ((num11 / (::CrossNetRuntime::UnsafeCast<::System::Double >(j)))));
            num10 = (num10 + ((num11 / ((((2. * j)) - 1.)))));
        }
        ::CSharpBenchmark::_Benchmark::PartialSumsTest::s1 = num2;
        ::CSharpBenchmark::_Benchmark::PartialSumsTest::s2 = num3;
        ::CSharpBenchmark::_Benchmark::PartialSumsTest::s3 = num4;
        ::CSharpBenchmark::_Benchmark::PartialSumsTest::s4 = num5;
        ::CSharpBenchmark::_Benchmark::PartialSumsTest::s5 = num6;
        ::CSharpBenchmark::_Benchmark::PartialSumsTest::s6 = num7;
        ::CSharpBenchmark::_Benchmark::PartialSumsTest::s7 = num8;
        ::CSharpBenchmark::_Benchmark::PartialSumsTest::s8 = num9;
        ::CSharpBenchmark::_Benchmark::PartialSumsTest::s9 = num10;
    }
    return (true);
}
void CSharpBenchmark::_Benchmark::PartialSumsTest::Static__ctor__()
{
    twothirds = 0.66666666666666663;
}
void * * CSharpBenchmark::_Benchmark::PartialSumsTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::PartialSumsTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::PartialSumsTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::PartialSumsTest::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::EventsTest__MyEventClass::__Trace__(unsigned char currentMark)
{
}
::System::Void CSharpBenchmark::_Benchmark::EventsTest__MyEventClass::RaiseEvent(::System::Int32 a, ::System::Int32 b)
{
    if ((this->mEvent != NULL))
    {
        (this->mEvent)->Invoke(a, b);
    }
}
::System::Void CSharpBenchmark::_Benchmark::EventsTest__MyEventClass::add_mEvent(::CSharpBenchmark::_Benchmark::EventsTest__EventDelegate * value)
{
    this->mEvent = (::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::EventsTest__EventDelegate >(::System::Delegate::Combine(::CrossNetRuntime::Cast<::System::Delegate >(this->mEvent), ::CrossNetRuntime::Cast<::System::Delegate >(value))));
}
::System::Void CSharpBenchmark::_Benchmark::EventsTest__MyEventClass::remove_mEvent(::CSharpBenchmark::_Benchmark::EventsTest__EventDelegate * value)
{
    this->mEvent = (::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::EventsTest__EventDelegate >(::System::Delegate::Remove(::CrossNetRuntime::Cast<::System::Delegate >(this->mEvent), ::CrossNetRuntime::Cast<::System::Delegate >(value))));
}
void CSharpBenchmark::_Benchmark::EventsTest__MyEventClass::__ctor__()
{
::System::Object::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::EventsTest__MyEventClass * CSharpBenchmark::_Benchmark::EventsTest__MyEventClass::__Create__()
{
    ::CSharpBenchmark::_Benchmark::EventsTest__MyEventClass *__temp__ = new ::CSharpBenchmark::_Benchmark::EventsTest__MyEventClass();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::EventsTest__MyEventClass::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::EventsTest__MyEventClass::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::EventsTest__MyEventClass), NULL, 0);
    ::CSharpBenchmark::_Benchmark::EventsTest__MyEventClass::s__InterfaceMap__ = interfaceMap;
}
::System::Int32 CSharpBenchmark::_Benchmark::EventsTest__MyClass::sCounter;
void ::CSharpBenchmark::_Benchmark::EventsTest__MyClass::__Trace__(unsigned char currentMark)
{
}
::System::Void CSharpBenchmark::_Benchmark::EventsTest__MyClass::Listener(::System::Int32 a, ::System::Int32 b)
{
    ::CSharpBenchmark::_Benchmark::EventsTest__MyClass::sCounter++;
}
void CSharpBenchmark::_Benchmark::EventsTest__MyClass::__ctor__()
{
::System::Object::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::EventsTest__MyClass * CSharpBenchmark::_Benchmark::EventsTest__MyClass::__Create__()
{
    ::CSharpBenchmark::_Benchmark::EventsTest__MyClass *__temp__ = new ::CSharpBenchmark::_Benchmark::EventsTest__MyClass();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void CSharpBenchmark::_Benchmark::EventsTest__MyClass::Static__ctor__()
{
    ::CSharpBenchmark::_Benchmark::EventsTest__MyClass::sCounter = 0;
}
void * * CSharpBenchmark::_Benchmark::EventsTest__MyClass::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::EventsTest__MyClass::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::EventsTest__MyClass), NULL, 0);
    ::CSharpBenchmark::_Benchmark::EventsTest__MyClass::s__InterfaceMap__ = interfaceMap;
}
::System::Int32 CSharpBenchmark::_Benchmark::EventsTest::NUM_LISTENERS;
::System::Int32 CSharpBenchmark::_Benchmark::EventsTest::REPEAT;
void ::CSharpBenchmark::_Benchmark::EventsTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::EventsTest::Test(::System::Int32 N)
{
    ::System::Int32 num;
    ::CSharpBenchmark::_Benchmark::EventsTest__MyEventClass * class2 = (::CSharpBenchmark::_Benchmark::EventsTest__MyEventClass::__Create__());
    for (num = 0 ; (num < 5) ; num++)
    {
        ::CSharpBenchmark::_Benchmark::EventsTest__MyClass * class3 = (::CSharpBenchmark::_Benchmark::EventsTest__MyClass::__Create__());
        class2->add_mEvent(new ::CSharpBenchmark::_Benchmark::EventsTest__EventDelegate__FUNCTOR__<::CSharpBenchmark::_Benchmark::EventsTest__MyClass >(class3, &::CSharpBenchmark::_Benchmark::EventsTest__MyClass::Listener));
    }
    for (num = 0 ; (num < N) ; num++)
    {
        ::CSharpBenchmark::_Benchmark::EventsTest__MyClass::sCounter = 0;
        for (::System::Int32 i = 0 ; (i < 100000) ; i++)
        {
            class2->RaiseEvent(42, 21);
        }
        if ((::CSharpBenchmark::_Benchmark::EventsTest__MyClass::sCounter != 500000))
        {
            return (false);
        }
    }
    return (true);
}
void CSharpBenchmark::_Benchmark::EventsTest::Static__ctor__()
{
    NUM_LISTENERS = 5;
    REPEAT = 100000;
}
void * * CSharpBenchmark::_Benchmark::EventsTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::EventsTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::EventsTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::EventsTest::s__InterfaceMap__ = interfaceMap;
}
::System::Int64 CSharpBenchmark::_Benchmark::HeapSortTest::IM;
::System::Int64 CSharpBenchmark::_Benchmark::HeapSortTest::IA;
::System::Int64 CSharpBenchmark::_Benchmark::HeapSortTest::IC;
::System::Int64 CSharpBenchmark::_Benchmark::HeapSortTest::last;
::System::Int32 CSharpBenchmark::_Benchmark::HeapSortTest::count;
void ::CSharpBenchmark::_Benchmark::HeapSortTest::__Trace__(unsigned char currentMark)
{
}
::System::Double CSharpBenchmark::_Benchmark::HeapSortTest::gen_random(::System::Double max)
{
    return ((((max * (::CSharpBenchmark::_Benchmark::HeapSortTest::last = (((((::CSharpBenchmark::_Benchmark::HeapSortTest::last * 3877LL)) + 29573LL)) % 139968LL)))) / 139968.));
}
::System::Boolean CSharpBenchmark::_Benchmark::HeapSortTest::Test(::System::Int32 N)
{
    ::CSharpBenchmark::_Benchmark::HeapSortTest::count = 102400;
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        ::System::Int32 num2;
        ::System::Array__G< ::System::Double > * __temp10752__ = ::System::Array__G< ::System::Double >::__Create__((::CSharpBenchmark::_Benchmark::HeapSortTest::count + 1));
        ::System::Array__G< ::System::Double > * ra = __temp10752__;
        ::CSharpBenchmark::_Benchmark::HeapSortTest::last = 42LL;
        for (num2 = 0 ; (num2 <= ::CSharpBenchmark::_Benchmark::HeapSortTest::count) ; num2++)
        {
            ra->Item(num2) = ::CSharpBenchmark::_Benchmark::HeapSortTest::gen_random(1.);
        }
        ::CSharpBenchmark::_Benchmark::HeapSortTest::heapsort(ra);
        ::System::Double minValue = CrossNetRuntime::BaseTypeWrapper<::System::Double >::MinValue;
        for (num2 = 1 ; (num2 < ::CSharpBenchmark::_Benchmark::HeapSortTest::count) ; num2++)
        {
            if ((ra->Item(num2) < minValue))
            {
                return (false);
            }
            minValue = ra->Item(num2);
        }
    }
    return (true);
}
::System::Void CSharpBenchmark::_Benchmark::HeapSortTest::heapsort(::System::Array__G< ::System::Double > * ra)
{
    ::System::Int32 num = (((::CSharpBenchmark::_Benchmark::HeapSortTest::count >> 1)) + 1);
    ::System::Int32 count = ::CSharpBenchmark::_Benchmark::HeapSortTest::count;
    for ( ; ; )
    {
        ::System::Double num5;
        if ((num > 1))
        {
            num5 = ra->Item(--num);
        }
        else
        {
            num5 = ra->Item(count);
            ra->Item(count) = ra->Item(1);
            if (((--count) == 1))
            {
                ra->Item(1) = num5;
                return;
            }
        }
        ::System::Int32 index = num;
        ::System::Int32 num2 = (num << 1);
        while ((num2 <= count))
        {
            if ((((num2 < count)) && ((ra->Item(num2) < ra->Item((num2 + 1))))))
            {
                num2++;
            }
            if ((num5 < ra->Item(num2)))
            {
                ra->Item(index) = ra->Item(num2);
                num2 = (num2 + (index = num2));
            }
            else
            {
                num2 = (count + 1);
            }
        }
        ra->Item(index) = num5;
    }
}
void CSharpBenchmark::_Benchmark::HeapSortTest::Static__ctor__()
{
IM = 139968LL;
IA = 3877LL;
IC = 29573LL;
{
    ::CSharpBenchmark::_Benchmark::HeapSortTest::last = 42LL;
    ::CSharpBenchmark::_Benchmark::HeapSortTest::count = 0;
}
}
void * * CSharpBenchmark::_Benchmark::HeapSortTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::HeapSortTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::HeapSortTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::HeapSortTest::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::RecursiveTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::RecursiveTest::Test(::System::Int32 N)
{
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        if ((::CSharpBenchmark::_Benchmark::RecursiveTest::Ack(3, 10) != 8189))
        {
            return (false);
        }
        if ((::CSharpBenchmark::_Benchmark::RecursiveTest::Fib(40) != 102334155))
        {
            return (false);
        }
        if ((::CSharpBenchmark::_Benchmark::RecursiveTest::Tak(30, 20, 10) != 11))
        {
            return (false);
        }
        if ((::CSharpBenchmark::_Benchmark::RecursiveTest::Fib(((40.))) != 102334155.))
        {
            return (false);
        }
        if ((::CSharpBenchmark::_Benchmark::RecursiveTest::Tak(((30.)), ((20.)), ((10.))) != 11.))
        {
            return (false);
        }
    }
    return (true);
}
::System::Int32 CSharpBenchmark::_Benchmark::RecursiveTest::Ack(::System::Int32 m, ::System::Int32 n)
{
    if ((m == 0))
    {
        return ((n + 1));
    }
    if ((n == 0))
    {
        return (::CSharpBenchmark::_Benchmark::RecursiveTest::Ack((m - 1), 1));
    }
    return (::CSharpBenchmark::_Benchmark::RecursiveTest::Ack((m - 1), ::CSharpBenchmark::_Benchmark::RecursiveTest::Ack(m, (n - 1))));
}
::System::Int32 CSharpBenchmark::_Benchmark::RecursiveTest::Fib(::System::Int32 n)
{
    if ((n < 2))
    {
        return (n);
    }
    return ((::CSharpBenchmark::_Benchmark::RecursiveTest::Fib((((n - 2)))) + ::CSharpBenchmark::_Benchmark::RecursiveTest::Fib((((n - 1))))));
}
::System::Int32 CSharpBenchmark::_Benchmark::RecursiveTest::Tak(::System::Int32 x, ::System::Int32 y, ::System::Int32 z)
{
    if ((y < x))
    {
        return (::CSharpBenchmark::_Benchmark::RecursiveTest::Tak(::CSharpBenchmark::_Benchmark::RecursiveTest::Tak((x - 1), y, z), ::CSharpBenchmark::_Benchmark::RecursiveTest::Tak((y - 1), z, x), ::CSharpBenchmark::_Benchmark::RecursiveTest::Tak((z - 1), x, y)));
    }
    return (z);
}
::System::Double CSharpBenchmark::_Benchmark::RecursiveTest::Fib(::System::Double n)
{
    if ((n < 2.))
    {
        return (n);
    }
    return ((::CSharpBenchmark::_Benchmark::RecursiveTest::Fib((((n - 2.)))) + ::CSharpBenchmark::_Benchmark::RecursiveTest::Fib((((n - 1.))))));
}
::System::Double CSharpBenchmark::_Benchmark::RecursiveTest::Tak(::System::Double x, ::System::Double y, ::System::Double z)
{
    if ((y < x))
    {
        return (::CSharpBenchmark::_Benchmark::RecursiveTest::Tak(::CSharpBenchmark::_Benchmark::RecursiveTest::Tak((x - 1.), y, z), ::CSharpBenchmark::_Benchmark::RecursiveTest::Tak((y - 1.), z, x), ::CSharpBenchmark::_Benchmark::RecursiveTest::Tak((z - 1.), x, y)));
    }
    return (z);
}
void * * CSharpBenchmark::_Benchmark::RecursiveTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::RecursiveTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::RecursiveTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::RecursiveTest::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass::__Trace__(unsigned char currentMark)
{
}
::System::Int32 CSharpBenchmark::_Benchmark::VirtualTest__BaseClass::Function(::System::Int32 a)
{
    return (-1);
}
void CSharpBenchmark::_Benchmark::VirtualTest__BaseClass::__ctor__()
{
::System::Object::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * CSharpBenchmark::_Benchmark::VirtualTest__BaseClass::__Create__()
{
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass *__temp__ = new ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::VirtualTest__BaseClass::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::VirtualTest__BaseClass::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass), NULL, 0);
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::VirtualTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::VirtualTest::Test(::System::Int32 N)
{
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class2 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class3 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class4 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class5 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class6 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class7 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class8 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class9 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class10 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class11 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class12 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class13 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class14 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class15 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class16 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass * class17 = ::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass >((::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()));
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        for (::System::Int32 j = 0 ; (j < 1000000) ; j++)
        {
            if ((class2->Function(42) != 42))
            {
                return (false);
            }
            if ((class3->Function(42) != 42))
            {
                return (false);
            }
            if ((class4->Function(42) != 42))
            {
                return (false);
            }
            if ((class5->Function(42) != 42))
            {
                return (false);
            }
            if ((class6->Function(42) != 42))
            {
                return (false);
            }
            if ((class7->Function(42) != 42))
            {
                return (false);
            }
            if ((class8->Function(42) != 42))
            {
                return (false);
            }
            if ((class9->Function(42) != 42))
            {
                return (false);
            }
            if ((class10->Function(42) != 42))
            {
                return (false);
            }
            if ((class11->Function(42) != 42))
            {
                return (false);
            }
            if ((class12->Function(42) != 42))
            {
                return (false);
            }
            if ((class13->Function(42) != 42))
            {
                return (false);
            }
            if ((class14->Function(42) != 42))
            {
                return (false);
            }
            if ((class15->Function(42) != 42))
            {
                return (false);
            }
            if ((class16->Function(42) != 42))
            {
                return (false);
            }
            if ((class17->Function(42) != 42))
            {
                return (false);
            }
        }
    }
    return (true);
}
void CSharpBenchmark::_Benchmark::VirtualTest::__ctor__()
{
::System::Object::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::VirtualTest * CSharpBenchmark::_Benchmark::VirtualTest::__Create__()
{
    ::CSharpBenchmark::_Benchmark::VirtualTest *__temp__ = new ::CSharpBenchmark::_Benchmark::VirtualTest();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::VirtualTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::VirtualTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::VirtualTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::VirtualTest::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::__Trace__(unsigned char currentMark)
{
    ::CrossNetRuntime::GCManager::Trace(data, currentMark);
}
::System::Boolean CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::get_Empty()
{
    return ((this->start == this->end));
}
::System::Object * CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::Clone()
{
    ::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue * queue = (::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::__Create__((this->size - 1)));
    queue->start = this->start;
    queue->end = this->end;
    (this->data)->CopyTo(queue->data, 0);
    return (::CrossNetRuntime::Cast<::System::Object >(queue));
}
::System::Boolean CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::Equals(::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue * other)
{
    if ((this->get_Count() != other->get_Count()))
    {
        return (false);
    }
    ::System::Int32 start = this->start;
    ::System::Int32 index = other->start;
    while ((start != this->end))
    {
        if ((this->data->Item(start) != other->data->Item(index)))
        {
            return (false);
        }
        this->Advance(& start);
        other->Advance(& index);
    }
    return (true);
}
::System::Int32 CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::get_Count()
{
    if ((this->end >= this->start))
    {
        return ((this->end - this->start));
    }
    return ((((this->size + this->end)) - this->start));
}
::System::Void CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::Reverse()
{
    if ((this->get_Count() >= 2))
    {
        ::System::Array::Reverse(this->data);
        ::System::Int32 num = (this->size - 1);
        ::System::Int32 num2 = 0;
        if ((this->end < this->start))
        {
            num = 0;
            num2 = (this->size - 1);
        }
        ::System::Int32 start = this->start;
        this->Regress(& this->end);
        this->start = ::System::Math::Abs((((num2 - ::System::Math::Abs((((this->end - num))))))));
        this->end = ::System::Math::Abs((((num - ::System::Math::Abs((((start - num2))))))));
        this->Advance(& this->end);
    }
}
::System::Void CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::PushFront(::System::Int32 i)
{
    this->temp = this->start;
    this->Regress(& this->start);
    if ((this->start == this->end))
    {
        this->start = this->temp;
        throw (::System::Exception::__Create__(scsharpbenchmark__Invalid_op));
    }
    this->data->Item(this->start) = i;
}
::System::Int32 CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::PopFront()
{
    ::System::Int32 num = this->data->Item(this->start);
    if ((this->start == this->end))
    {
        throw (::System::Exception::__Create__(scsharpbenchmark__Invalid_op));
    }
    this->Advance(& this->start);
    return (num);
}
::System::Int32 CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::PeekFront()
{
    if ((this->start == this->end))
    {
        throw (::System::Exception::__Create__(scsharpbenchmark__Invalid_Op));
    }
    return (this->data->Item(this->start));
}
::System::Int32 CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::PeekBack()
{
    if ((this->start == this->end))
    {
        throw (::System::Exception::__Create__(scsharpbenchmark__Invalid_Op));
    }
    ::System::Int32 end = this->end;
    this->Regress(& end);
    return (this->data->Item(end));
}
::System::Void CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::PushBack(::System::Int32 i)
{
    this->temp = this->end;
    this->Advance(& this->end);
    if ((this->start == this->end))
    {
        this->end = this->temp;
        throw (::System::Exception::__Create__(scsharpbenchmark__Invalid_op));
    }
    this->data->Item(this->temp) = i;
}
::System::Int32 CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::PopBack()
{
    if ((this->start == this->end))
    {
        throw (::System::Exception::__Create__(scsharpbenchmark__Invalid_op));
    }
    this->Regress(& this->end);
    return (this->data->Item(this->end));
}
void CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::__ctor__(::System::Int32 Size)
{
::System::Object::__ctor__();
{
    this->data = static_cast<::System::Array__G< ::System::Int32 > * >(NULL);
    this->start = 0;
    this->end = 0;
    this->size = 0;
    this->temp = 0;
    ::System::Array__G< ::System::Int32 > * __temp10753__ = ::System::Array__G< ::System::Int32 >::__Create__((Size + 1));
    this->data = __temp10753__;
    this->size = (Size + 1);
}
}
::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue * CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::__Create__(::System::Int32 Size)
{
    ::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue *__temp__ = new ::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__( Size);
    return (__temp__);
}
::System::Void CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::Advance(::System::Int32 * item)
{
    if ((((*item) = ((*item) + 1)) == this->size))
    {
        (*item) = 0;
    }
}
::System::Void CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::Regress(::System::Int32 * item)
{
    if (((*item) != 0))
    {
        (*item)--;
    }
    else
    {
        (*item) = (this->size - 1);
    }
}
::System::Void CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::Clear()
{
    this->start = 0;
    this->end = 0;
}
::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue * CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::__Create__()
{
    ::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue * __temp__ = new ::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue;
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    return (__temp__);
}
::System::Object * CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::Wrapper__ICloneable::Clone(void * __passed_instance__)
{
	::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue * __instance__ = static_cast<::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue * >(__passed_instance__);
	return (__instance__->Clone());
}
void * * CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::__CreateInterfaceMap__()
{
    ::CrossNetRuntime::InterfaceInfo info[] = 
    {
        {	::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::Wrapper__ICloneable::__GetId__(), new ::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::Wrapper__ICloneable	}
    };
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue), info, 1);
    ::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::s__InterfaceMap__ = interfaceMap;
}
::System::Int32 CSharpBenchmark::_Benchmark::ListTest::SIZE;
void ::CSharpBenchmark::_Benchmark::ListTest::__Trace__(unsigned char currentMark)
{
}
::System::Boolean CSharpBenchmark::_Benchmark::ListTest::Test(::System::Int32 N)
{
    for (::System::Int32 i = 0 ; (i < N) ; i++)
    {
        if ((::CSharpBenchmark::_Benchmark::ListTest::RunLists() != 10000))
        {
            return (false);
        }
    }
    return (true);
}
::System::Int32 CSharpBenchmark::_Benchmark::ListTest::RunLists()
{
    ::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue * queue = (::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::__Create__(10000));
    for (::System::Int32 i = 0 ; (i < 10000) ; i++)
    {
        queue->PushBack((i + 1));
    }
    ::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue * other = (::CrossNetRuntime::Cast<::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue >(queue->Clone()));
    ::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue * queue3 = (::CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::__Create__(10000));
    while (!other->get_Empty())
    {
        queue3->PushBack(other->PopFront());
    }
    while (!queue3->get_Empty())
    {
        other->PushBack(queue3->PopBack());
    }
    queue->Reverse();
    if ((queue->PeekFront() != 10000))
    {
        return (-1);
    }
    if (!queue->Equals(other))
    {
        return (-1);
    }
    return (queue->get_Count());
}
void CSharpBenchmark::_Benchmark::ListTest::Static__ctor__()
{
    SIZE = 10000;
}
void * * CSharpBenchmark::_Benchmark::ListTest::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::ListTest::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::ListTest), NULL, 0);
    ::CSharpBenchmark::_Benchmark::ListTest::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__I2::__Trace__(unsigned char currentMark)
{
}
void * * CSharpBenchmark::_Benchmark::CastTest__I2::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__I2::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterInterface();
    ::CSharpBenchmark::_Benchmark::CastTest__I2::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__C1::__Trace__(unsigned char currentMark)
{
}
void CSharpBenchmark::_Benchmark::CastTest__C1::__ctor__()
{
::System::Object::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::CastTest__C1 * CSharpBenchmark::_Benchmark::CastTest__C1::__Create__()
{
    ::CSharpBenchmark::_Benchmark::CastTest__C1 *__temp__ = new ::CSharpBenchmark::_Benchmark::CastTest__C1();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::CastTest__C1::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__C1::__CreateInterfaceMap__()
{
    ::CrossNetRuntime::InterfaceInfo info[] = 
    {
        {	::CSharpBenchmark::_Benchmark::CastTest__C1::Wrapper__CastTest__I1::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C1::Wrapper__CastTest__I1	}
    };
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::CastTest__C1), info, 1);
    ::CSharpBenchmark::_Benchmark::CastTest__C1::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Trace__(unsigned char currentMark)
{
}
::System::Int32 CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::Function(::System::Int32 a)
{
    return (a);
}
void CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__ctor__()
{
::System::Object::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass * CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__Create__()
{
    ::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass *__temp__ = new ::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
::System::Int32 CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::Wrapper__InterfaceTest__IMyInterface::Function(void * __passed_instance__, ::System::Int32 a)
{
	::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass * __instance__ = static_cast<::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass * >(__passed_instance__);
	return (__instance__->Function( a));
}
void * * CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__CreateInterfaceMap__()
{
    ::CrossNetRuntime::InterfaceInfo info[] = 
    {
        {	::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::Wrapper__InterfaceTest__IMyInterface::__GetId__(), new ::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::Wrapper__InterfaceTest__IMyInterface	}
    };
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass), info, 1);
    ::CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::GcTest__NthToggle::__Trace__(unsigned char currentMark)
{
}
void CSharpBenchmark::_Benchmark::GcTest__NthToggle::__ctor__(::System::Boolean start_state, ::System::Int32 max_counter)
{
::CSharpBenchmark::_Benchmark::GcTest__Toggle::__ctor__(start_state);
{
    this->count_max = 0;
    this->counter = 0;
    this->count_max = max_counter;
    this->counter = 0;
}
}
::CSharpBenchmark::_Benchmark::GcTest__NthToggle * CSharpBenchmark::_Benchmark::GcTest__NthToggle::__Create__(::System::Boolean start_state, ::System::Int32 max_counter)
{
    ::CSharpBenchmark::_Benchmark::GcTest__NthToggle *__temp__ = new ::CSharpBenchmark::_Benchmark::GcTest__NthToggle();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__( start_state,  max_counter);
    return (__temp__);
}
::CSharpBenchmark::_Benchmark::GcTest__NthToggle * CSharpBenchmark::_Benchmark::GcTest__NthToggle::activate()
{
    this->counter++;
    if ((this->counter >= this->count_max))
    {
        ::CSharpBenchmark::_Benchmark::GcTest__Toggle::state = !::CSharpBenchmark::_Benchmark::GcTest__Toggle::state;
        this->counter = 0;
    }
    return (this);
}
::CSharpBenchmark::_Benchmark::GcTest__NthToggle * CSharpBenchmark::_Benchmark::GcTest__NthToggle::__Create__()
{
    ::CSharpBenchmark::_Benchmark::GcTest__NthToggle * __temp__ = new ::CSharpBenchmark::_Benchmark::GcTest__NthToggle;
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::GcTest__NthToggle::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::GcTest__NthToggle::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::GcTest__NthToggle), NULL, 0, ::CSharpBenchmark::_Benchmark::GcTest__Toggle::__GetInterfaceMap__());
    ::CSharpBenchmark::_Benchmark::GcTest__NthToggle::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Trace__(unsigned char currentMark)
{
}
::System::Int32 CSharpBenchmark::_Benchmark::VirtualTest__MyClass::Function(::System::Int32 a)
{
    return (a);
}
void CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__ctor__()
{
::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::VirtualTest__MyClass * CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__Create__()
{
    ::CSharpBenchmark::_Benchmark::VirtualTest__MyClass *__temp__ = new ::CSharpBenchmark::_Benchmark::VirtualTest__MyClass();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::VirtualTest__MyClass::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::VirtualTest__MyClass), NULL, 0, ::CSharpBenchmark::_Benchmark::VirtualTest__BaseClass::__GetInterfaceMap__());
    ::CSharpBenchmark::_Benchmark::VirtualTest__MyClass::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__I3::__Trace__(unsigned char currentMark)
{
}
void * * CSharpBenchmark::_Benchmark::CastTest__I3::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__I3::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterInterface();
    ::CSharpBenchmark::_Benchmark::CastTest__I3::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__C2::__Trace__(unsigned char currentMark)
{
}
void CSharpBenchmark::_Benchmark::CastTest__C2::__ctor__()
{
::CSharpBenchmark::_Benchmark::CastTest__C1::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::CastTest__C2 * CSharpBenchmark::_Benchmark::CastTest__C2::__Create__()
{
    ::CSharpBenchmark::_Benchmark::CastTest__C2 *__temp__ = new ::CSharpBenchmark::_Benchmark::CastTest__C2();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::CastTest__C2::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__C2::__CreateInterfaceMap__()
{
    ::CrossNetRuntime::InterfaceInfo info[] = 
    {
        {	::CSharpBenchmark::_Benchmark::CastTest__C2::Wrapper__CastTest__I1::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C2::Wrapper__CastTest__I1	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C2::Wrapper__CastTest__I2::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C2::Wrapper__CastTest__I2	}
    };
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::CastTest__C2), info, 2, ::CSharpBenchmark::_Benchmark::CastTest__C1::__GetInterfaceMap__());
    ::CSharpBenchmark::_Benchmark::CastTest__C2::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__I4::__Trace__(unsigned char currentMark)
{
}
void * * CSharpBenchmark::_Benchmark::CastTest__I4::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__I4::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterInterface();
    ::CSharpBenchmark::_Benchmark::CastTest__I4::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__C3::__Trace__(unsigned char currentMark)
{
}
void CSharpBenchmark::_Benchmark::CastTest__C3::__ctor__()
{
::CSharpBenchmark::_Benchmark::CastTest__C2::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::CastTest__C3 * CSharpBenchmark::_Benchmark::CastTest__C3::__Create__()
{
    ::CSharpBenchmark::_Benchmark::CastTest__C3 *__temp__ = new ::CSharpBenchmark::_Benchmark::CastTest__C3();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::CastTest__C3::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__C3::__CreateInterfaceMap__()
{
    ::CrossNetRuntime::InterfaceInfo info[] = 
    {
        {	::CSharpBenchmark::_Benchmark::CastTest__C3::Wrapper__CastTest__I1::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C3::Wrapper__CastTest__I1	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C3::Wrapper__CastTest__I2::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C3::Wrapper__CastTest__I2	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C3::Wrapper__CastTest__I3::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C3::Wrapper__CastTest__I3	}
    };
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::CastTest__C3), info, 3, ::CSharpBenchmark::_Benchmark::CastTest__C2::__GetInterfaceMap__());
    ::CSharpBenchmark::_Benchmark::CastTest__C3::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__I5::__Trace__(unsigned char currentMark)
{
}
void * * CSharpBenchmark::_Benchmark::CastTest__I5::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__I5::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterInterface();
    ::CSharpBenchmark::_Benchmark::CastTest__I5::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__C4::__Trace__(unsigned char currentMark)
{
}
void CSharpBenchmark::_Benchmark::CastTest__C4::__ctor__()
{
::CSharpBenchmark::_Benchmark::CastTest__C3::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::CastTest__C4 * CSharpBenchmark::_Benchmark::CastTest__C4::__Create__()
{
    ::CSharpBenchmark::_Benchmark::CastTest__C4 *__temp__ = new ::CSharpBenchmark::_Benchmark::CastTest__C4();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::CastTest__C4::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__C4::__CreateInterfaceMap__()
{
    ::CrossNetRuntime::InterfaceInfo info[] = 
    {
        {	::CSharpBenchmark::_Benchmark::CastTest__C4::Wrapper__CastTest__I1::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C4::Wrapper__CastTest__I1	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C4::Wrapper__CastTest__I2::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C4::Wrapper__CastTest__I2	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C4::Wrapper__CastTest__I3::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C4::Wrapper__CastTest__I3	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C4::Wrapper__CastTest__I4::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C4::Wrapper__CastTest__I4	}
    };
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::CastTest__C4), info, 4, ::CSharpBenchmark::_Benchmark::CastTest__C3::__GetInterfaceMap__());
    ::CSharpBenchmark::_Benchmark::CastTest__C4::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__I6::__Trace__(unsigned char currentMark)
{
}
void * * CSharpBenchmark::_Benchmark::CastTest__I6::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__I6::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterInterface();
    ::CSharpBenchmark::_Benchmark::CastTest__I6::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__C5::__Trace__(unsigned char currentMark)
{
}
void CSharpBenchmark::_Benchmark::CastTest__C5::__ctor__()
{
::CSharpBenchmark::_Benchmark::CastTest__C4::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::CastTest__C5 * CSharpBenchmark::_Benchmark::CastTest__C5::__Create__()
{
    ::CSharpBenchmark::_Benchmark::CastTest__C5 *__temp__ = new ::CSharpBenchmark::_Benchmark::CastTest__C5();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::CastTest__C5::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__C5::__CreateInterfaceMap__()
{
    ::CrossNetRuntime::InterfaceInfo info[] = 
    {
        {	::CSharpBenchmark::_Benchmark::CastTest__C5::Wrapper__CastTest__I1::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C5::Wrapper__CastTest__I1	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C5::Wrapper__CastTest__I2::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C5::Wrapper__CastTest__I2	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C5::Wrapper__CastTest__I3::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C5::Wrapper__CastTest__I3	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C5::Wrapper__CastTest__I4::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C5::Wrapper__CastTest__I4	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C5::Wrapper__CastTest__I5::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C5::Wrapper__CastTest__I5	}
    };
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::CastTest__C5), info, 5, ::CSharpBenchmark::_Benchmark::CastTest__C4::__GetInterfaceMap__());
    ::CSharpBenchmark::_Benchmark::CastTest__C5::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__I7::__Trace__(unsigned char currentMark)
{
}
void * * CSharpBenchmark::_Benchmark::CastTest__I7::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__I7::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterInterface();
    ::CSharpBenchmark::_Benchmark::CastTest__I7::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__C6::__Trace__(unsigned char currentMark)
{
}
void CSharpBenchmark::_Benchmark::CastTest__C6::__ctor__()
{
::CSharpBenchmark::_Benchmark::CastTest__C5::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::CastTest__C6 * CSharpBenchmark::_Benchmark::CastTest__C6::__Create__()
{
    ::CSharpBenchmark::_Benchmark::CastTest__C6 *__temp__ = new ::CSharpBenchmark::_Benchmark::CastTest__C6();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::CastTest__C6::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__C6::__CreateInterfaceMap__()
{
    ::CrossNetRuntime::InterfaceInfo info[] = 
    {
        {	::CSharpBenchmark::_Benchmark::CastTest__C6::Wrapper__CastTest__I1::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C6::Wrapper__CastTest__I1	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C6::Wrapper__CastTest__I2::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C6::Wrapper__CastTest__I2	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C6::Wrapper__CastTest__I3::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C6::Wrapper__CastTest__I3	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C6::Wrapper__CastTest__I4::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C6::Wrapper__CastTest__I4	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C6::Wrapper__CastTest__I5::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C6::Wrapper__CastTest__I5	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C6::Wrapper__CastTest__I6::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C6::Wrapper__CastTest__I6	}
    };
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::CastTest__C6), info, 6, ::CSharpBenchmark::_Benchmark::CastTest__C5::__GetInterfaceMap__());
    ::CSharpBenchmark::_Benchmark::CastTest__C6::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__I8::__Trace__(unsigned char currentMark)
{
}
void * * CSharpBenchmark::_Benchmark::CastTest__I8::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__I8::__CreateInterfaceMap__()
{
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterInterface();
    ::CSharpBenchmark::_Benchmark::CastTest__I8::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__C7::__Trace__(unsigned char currentMark)
{
}
void CSharpBenchmark::_Benchmark::CastTest__C7::__ctor__()
{
::CSharpBenchmark::_Benchmark::CastTest__C6::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::CastTest__C7 * CSharpBenchmark::_Benchmark::CastTest__C7::__Create__()
{
    ::CSharpBenchmark::_Benchmark::CastTest__C7 *__temp__ = new ::CSharpBenchmark::_Benchmark::CastTest__C7();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::CastTest__C7::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__C7::__CreateInterfaceMap__()
{
    ::CrossNetRuntime::InterfaceInfo info[] = 
    {
        {	::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I1::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I1	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I2::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I2	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I3::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I3	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I4::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I4	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I5::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I5	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I6::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I6	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I7::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C7::Wrapper__CastTest__I7	}
    };
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::CastTest__C7), info, 7, ::CSharpBenchmark::_Benchmark::CastTest__C6::__GetInterfaceMap__());
    ::CSharpBenchmark::_Benchmark::CastTest__C7::s__InterfaceMap__ = interfaceMap;
}
void ::CSharpBenchmark::_Benchmark::CastTest__C8::__Trace__(unsigned char currentMark)
{
}
void CSharpBenchmark::_Benchmark::CastTest__C8::__ctor__()
{
::CSharpBenchmark::_Benchmark::CastTest__C7::__ctor__();
{
}
}
::CSharpBenchmark::_Benchmark::CastTest__C8 * CSharpBenchmark::_Benchmark::CastTest__C8::__Create__()
{
    ::CSharpBenchmark::_Benchmark::CastTest__C8 *__temp__ = new ::CSharpBenchmark::_Benchmark::CastTest__C8();
    CROSSNET_ASSERT(__GetInterfaceMap__() != NULL, "Interface map not set correctly!");
    __temp__->m__InterfaceMap__ = __GetInterfaceMap__();
    __temp__->__ctor__();
    return (__temp__);
}
void * * CSharpBenchmark::_Benchmark::CastTest__C8::s__InterfaceMap__ = NULL;
void CSharpBenchmark::_Benchmark::CastTest__C8::__CreateInterfaceMap__()
{
    ::CrossNetRuntime::InterfaceInfo info[] = 
    {
        {	::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I1::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I1	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I2::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I2	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I3::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I3	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I4::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I4	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I5::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I5	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I6::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I6	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I7::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I7	},
        {	::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I8::__GetId__(), new ::CSharpBenchmark::_Benchmark::CastTest__C8::Wrapper__CastTest__I8	}
    };
    void * * interfaceMap = ::CrossNetRuntime::InterfaceMapper::RegisterObject(sizeof(::CSharpBenchmark::_Benchmark::CastTest__C8), info, 8, ::CSharpBenchmark::_Benchmark::CastTest__C7::__GetInterfaceMap__());
    ::CSharpBenchmark::_Benchmark::CastTest__C8::s__InterfaceMap__ = interfaceMap;
}
void csharpbenchmark__StaticConstructors()
{
    ::CSharpBenchmark::_Benchmark::BinaryTreesTest::Static__ctor__();
    ::CSharpBenchmark::_Benchmark::FannkuchTest::Static__ctor__();
    ::CSharpBenchmark::_Benchmark::UnsafeTest::Static__ctor__();
    ::CSharpBenchmark::_Benchmark::StringConcatenationTest::Static__ctor__();
    ::CSharpBenchmark::_Benchmark::NestedLoopsTest::Static__ctor__();
    ::CSharpBenchmark::_Benchmark::ForeachOnArrayTest::Static__ctor__();
    ::CSharpBenchmark::_Benchmark::GcTest::Static__ctor__();
    ::CSharpBenchmark::_Benchmark::MatrixTest::Static__ctor__();
    ::CSharpBenchmark::_Benchmark::PartialSumsTest::Static__ctor__();
    ::CSharpBenchmark::_Benchmark::EventsTest__MyClass::Static__ctor__();
    ::CSharpBenchmark::_Benchmark::EventsTest::Static__ctor__();
    ::CSharpBenchmark::_Benchmark::HeapSortTest::Static__ctor__();
    ::CSharpBenchmark::_Benchmark::ListTest::Static__ctor__();
}
void csharpbenchmark__PopulateInterfaceMaps()
{
    CSharpBenchmark::_Benchmark::NSieveTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::BinaryTreesTest__TreeNode::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::BinaryTreesTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::FannkuchTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::UnsafeTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::StringConcatenationTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__I1::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::InterfaceTest__IMyInterface::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::InterfaceTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::HashtableTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::NestedLoopsTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::ForeachOnArrayTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::Benchmark::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::GcTest__Toggle::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::GcTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::DictionaryTest__Def::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::DictionaryTest__Abc::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::DictionaryTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::MatrixTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::PartialSumsTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::EventsTest__MyEventClass::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::EventsTest__MyClass::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::EventsTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::HeapSortTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::RecursiveTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::VirtualTest__BaseClass::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::VirtualTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::ListTest__IntDeQueue::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::ListTest::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__I2::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__C1::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::InterfaceTest__MyClass::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::GcTest__NthToggle::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::VirtualTest__MyClass::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__I3::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__C2::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__I4::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__C3::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__I5::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__C4::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__I6::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__C5::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__I7::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__C6::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__I8::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__C7::__CreateInterfaceMap__();
    CSharpBenchmark::_Benchmark::CastTest__C8::__CreateInterfaceMap__();
}
void csharpbenchmark__AssemblyTrace(unsigned char currentMark)
{
}
void csharpbenchmark__Setup()
{
    csharpbenchmark__PopulateInterfaceMaps();
    csharpbenchmark__RegisterStringPools();
    csharpbenchmark__StaticConstructors();
}
void csharpbenchmark__Teardown()
{
}
void csharpbenchmark__RegisterStringPools()
{
    scsharpbenchmark___ = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"_");
    scsharpbenchmark__foo_ = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"foo_");
    scsharpbenchmark__foo_0 = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"foo_0");
    scsharpbenchmark__0 = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"0");
    scsharpbenchmark__foo_3705 = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"foo_3705");
    scsharpbenchmark__3705 = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"3705");
    scsharpbenchmark__foo_9999 = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"foo_9999");
    scsharpbenchmark__9999 = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"9999");
    scsharpbenchmark__Binary_Tre = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Binary Tree");
    scsharpbenchmark__Cast = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Cast");
    scsharpbenchmark__Dictionary = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Dictionary");
    scsharpbenchmark__Event = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Event");
    scsharpbenchmark__Fannkuch = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Fannkuch");
    scsharpbenchmark__Foreach_on = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Foreach on array");
    scsharpbenchmark__GC = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"GC");
    scsharpbenchmark__Hashtable_ = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Hashtable and box / unbox");
    scsharpbenchmark__Heapsort = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Heapsort");
    scsharpbenchmark__Interface_ = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Interface call");
    scsharpbenchmark__List = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"List");
    scsharpbenchmark__Matrix_mul = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Matrix multiply");
    scsharpbenchmark__Nested_loo = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Nested loops");
    scsharpbenchmark__Sieves = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Sieves");
    scsharpbenchmark__Partial_su = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Partial sums");
    scsharpbenchmark__Recursive_ = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Recursive call");
    scsharpbenchmark__String_con = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"String concatenation");
    scsharpbenchmark__Unsafe_cod = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Unsafe code");
    scsharpbenchmark__Virtual_ca = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Virtual call");
    scsharpbenchmark__Press_a_ke = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Press a key...");
    scsharpbenchmark__Test_ = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Test ");
    scsharpbenchmark_____0 = ::CrossNetRuntime::StringPooler::GetOrCreateString(L":");
    scsharpbenchmark___Initializ = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"\x0009" L"Initializing...");
    scsharpbenchmark___Initializ__0 = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"\x0009" L"Initialization failed!");
    scsharpbenchmark___Running__ = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"\x0009" L"Running...");
    scsharpbenchmark___Test_fail = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"\x0009" L"Test failed!");
    scsharpbenchmark___Finished_ = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"\x0009" L"Finished in ");
    scsharpbenchmark___seconds__ = ::CrossNetRuntime::StringPooler::GetOrCreateString(L" seconds...");
    scsharpbenchmark__Abc = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Abc");
    scsharpbenchmark__Def = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Def");
    scsharpbenchmark__Invalid_op = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Invalid operation");
    scsharpbenchmark__Invalid_Op = ::CrossNetRuntime::StringPooler::GetOrCreateString(L"Invalid Operation");
}
::System::String * scsharpbenchmark___;
::System::String * scsharpbenchmark__foo_;
::System::String * scsharpbenchmark__foo_0;
::System::String * scsharpbenchmark__0;
::System::String * scsharpbenchmark__foo_3705;
::System::String * scsharpbenchmark__3705;
::System::String * scsharpbenchmark__foo_9999;
::System::String * scsharpbenchmark__9999;
::System::String * scsharpbenchmark__Binary_Tre;
::System::String * scsharpbenchmark__Cast;
::System::String * scsharpbenchmark__Dictionary;
::System::String * scsharpbenchmark__Event;
::System::String * scsharpbenchmark__Fannkuch;
::System::String * scsharpbenchmark__Foreach_on;
::System::String * scsharpbenchmark__GC;
::System::String * scsharpbenchmark__Hashtable_;
::System::String * scsharpbenchmark__Heapsort;
::System::String * scsharpbenchmark__Interface_;
::System::String * scsharpbenchmark__List;
::System::String * scsharpbenchmark__Matrix_mul;
::System::String * scsharpbenchmark__Nested_loo;
::System::String * scsharpbenchmark__Sieves;
::System::String * scsharpbenchmark__Partial_su;
::System::String * scsharpbenchmark__Recursive_;
::System::String * scsharpbenchmark__String_con;
::System::String * scsharpbenchmark__Unsafe_cod;
::System::String * scsharpbenchmark__Virtual_ca;
::System::String * scsharpbenchmark__Press_a_ke;
::System::String * scsharpbenchmark__Test_;
::System::String * scsharpbenchmark_____0;
::System::String * scsharpbenchmark___Initializ;
::System::String * scsharpbenchmark___Initializ__0;
::System::String * scsharpbenchmark___Running__;
::System::String * scsharpbenchmark___Test_fail;
::System::String * scsharpbenchmark___Finished_;
::System::String * scsharpbenchmark___seconds__;
::System::String * scsharpbenchmark__Abc;
::System::String * scsharpbenchmark__Def;
::System::String * scsharpbenchmark__Invalid_op;
::System::String * scsharpbenchmark__Invalid_Op;

#endif
